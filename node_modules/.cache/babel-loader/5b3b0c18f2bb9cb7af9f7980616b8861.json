{"ast":null,"code":"var _jsxFileName = \"/Users/goody/codes/Glog/src/pages/Topics.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Topics = () => {\n  _s();\n\n  let match = useRouteMatch();\n  return /*#__PURE__*/_jsxDEV(TopicsStyle, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `${match.url}/components`,\n            children: \"Components\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `${match.url}/props-v-state`,\n            children: \"Props v. State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: `${match.path}/:topicId`,\n          children: /*#__PURE__*/_jsxDEV(Topic, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: match.path,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Please select a topic.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Topics, \"zx5nH/hVPZnBbaV+fF3J0tuE528=\", false, function () {\n  return [useRouteMatch];\n});\n\n_c = Topics;\nexport default Topics;\n\nconst Topic = () => {\n  _s2();\n\n  let {\n    topicId\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [\"Requested topic ID: \", topicId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(Topic, \"11nvDXGjO1ebkehQgvCCT9TXuxI=\", false, function () {\n  return [useParams];\n});\n\n_c2 = Topic;\nconst TopicsStyle = styled.div``;\n_c3 = TopicsStyle;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Topics\");\n$RefreshReg$(_c2, \"Topic\");\n$RefreshReg$(_c3, \"TopicsStyle\");","map":{"version":3,"sources":["/Users/goody/codes/Glog/src/pages/Topics.jsx"],"names":["BrowserRouter","Router","Switch","Route","Link","useRouteMatch","useParams","styled","Topics","match","url","path","Topic","topicId","TopicsStyle","div"],"mappings":";;;;AAAA,SACEA,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,aALF,EAMEC,SANF,QAOO,kBAPP;AAQA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,MAAIC,KAAK,GAAGJ,aAAa,EAAzB;AAEA,sBACE,QAAC,WAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,GAAEI,KAAK,CAACC,GAAI,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,GAAED,KAAK,CAACC,GAAI,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,WAA3B;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEF,KAAK,CAACE,IAAnB;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA3BD;;GAAMH,M;UACQH,a;;;KADRG,M;AA6BN,eAAeA,MAAf;;AAEA,MAAMI,KAAK,GAAG,MAAM;AAAA;;AAClB,MAAI;AAAEC,IAAAA;AAAF,MAAcP,SAAS,EAA3B;AACA,sBAAO;AAAA,uCAAyBO,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAHD;;IAAMD,K;UACcN,S;;;MADdM,K;AAKN,MAAME,WAAW,GAAGP,MAAM,CAACQ,GAAI,EAA/B;MAAMD,W","sourcesContent":["import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Topics = () => {\n  let match = useRouteMatch();\n\n  return (\n    <TopicsStyle>\n      <Router>\n        <h2>Topics</h2>\n        <ul>\n          <li>\n            <Link to={`${match.url}/components`}>Components</Link>\n          </li>\n          <li>\n            <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route path={`${match.path}/:topicId`}>\n            <Topic />\n          </Route>\n          <Route path={match.path}>\n            <h3>Please select a topic.</h3>\n          </Route>\n        </Switch>\n      </Router>\n    </TopicsStyle>\n  );\n};\n\nexport default Topics;\n\nconst Topic = () => {\n  let { topicId } = useParams();\n  return <h3>Requested topic ID: {topicId}</h3>;\n};\n\nconst TopicsStyle = styled.div``;\n"]},"metadata":{},"sourceType":"module"}